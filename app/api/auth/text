// next-auth.js
import axios from "axios";
import NextAuth from "next-auth";
import CredentialsProvider from "next-auth/providers/credentials";

export default NextAuth({
  providers: [
    CredentialsProvider({
      name: "Credentials",
      async authorize(credentials, req) {
        if (!credentials?.loginId || !credentials?.password) return null;
        const { loginId, password } = credentials;
        const res = await axios.post(
          "https://e-learning-back-jmydev.onrender.com/login",
          { loginId: loginId, password: password },
          {
            headers: { "Content-Type": "application/x-www-form-urlencoded" },
          }
        );
        if (res.statusCode !== 201) {
          throw new Error("No user Found with Email Please Sign Up...!");
        }

        return res.data;
      },
    }),
  ],
  secret: "XH6bp/TkLvnUkQiPDEZNyHc0CV+VV5RL/n+HdVHoHN0=",
  session: {
    strategy: "jwt",
  },
});

// export const authOptions = {
//   providers: [
//     CredentialsProvider({
//       name: "credentials",
//       credentials: {},
//       authorize: async (credentials) => {
//         if (!credentials?.loginId || !credentials?.password) return null;
//         const { loginId, password } = credentials;
//         // Send a POST request to your authentication API endpoint

//         const res = await axios.post(
//           "https://e-learning-back-jmydev.onrender.com/login",
//           { loginId: loginId, password: password },
//           {
//             headers: { "Content-Type": "application/x-www-form-urlencoded" },
//           }
//         );

//         // const { user } = await res.json();
//         // console.log(res.data.user);

//         // If no error and we have user data, return it
//         if (res.statusCode === 201) {
//           console.log("yesssssssssssssssss");
//           return res.data;
//         }
//         // Return null if user data could not be retrieved
//         return null;
//       },
//     }),
//   ],
//   session: {
//     strategy: "jwt",
//   },
//   pages: {
//     signIn: "/login",
//   },
//   secret: "your-secret",
// };

// const handler = NextAuth(authOptions);

// export { handler as GET, handler as POST };
